# syntax=docker/dockerfile:1

####################################
# ① まず Node でビルドステージを作成
####################################
FROM node:20-alpine AS builder
WORKDIR /app

# npm で pnpm をグローバルインストール
RUN npm install -g pnpm@9

# ワークスペース定義とルートの package.json をコピーして依存解決
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# アプリ本体を全部コピーしてビルド
COPY apps/agent-tars ./apps/agent-tars
RUN pnpm --filter ./apps/agent-tars run build:web

####################################
# ② 軽量な nginx イメージに静的ファイルを受け渡す
####################################
FROM nginx:stable-alpine AS production
# ビルド成果物だけを nginx のデフォルトドキュメントルートにコピー
COPY --from=builder /app/apps/agent-tars/dist/web /usr/share/nginx/html

# （必要に応じて）ポート公開
EXPOSE 80

# コンテナ起動時のコマンド
CMD ["nginx", "-g", "daemon off;"]
